/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as auth500Import } from './routes/(auth)/500'
import { Route as AuthenticatedDiscountsLaztImport } from './routes/_authenticated/discounts.lazt'

// Create Virtual Routes

const AuthenticatedProductsLazyImport = createFileRoute(
  '/_authenticated/products',
)()
const AuthenticatedOrdersLazyImport = createFileRoute(
  '/_authenticated/orders',
)()
const AuthenticatedInventoryLazyImport = createFileRoute(
  '/_authenticated/inventory',
)()
const AuthenticatedHelpCenterLazyImport = createFileRoute(
  '/_authenticated/help-center',
)()
const AuthenticatedDiscountsLazyImport = createFileRoute(
  '/_authenticated/discounts',
)()
const AuthenticatedCustomersLazyImport = createFileRoute(
  '/_authenticated/customers',
)()
const AuthenticatedAnalyticsLazyImport = createFileRoute(
  '/_authenticated/analytics',
)()
const errors503LazyImport = createFileRoute('/(errors)/503')()
const errors500LazyImport = createFileRoute('/(errors)/500')()
const errors404LazyImport = createFileRoute('/(errors)/404')()
const errors403LazyImport = createFileRoute('/(errors)/403')()
const errors401LazyImport = createFileRoute('/(errors)/401')()
const AuthenticatedSettingsRouteLazyImport = createFileRoute(
  '/_authenticated/settings',
)()
const AuthenticatedSettingsIndexLazyImport = createFileRoute(
  '/_authenticated/settings/',
)()
const AuthenticatedSettingsNotificationsLazyImport = createFileRoute(
  '/_authenticated/settings/notifications',
)()
const AuthenticatedSettingsDisplayLazyImport = createFileRoute(
  '/_authenticated/settings/display',
)()
const AuthenticatedSettingsAccountLazyImport = createFileRoute(
  '/_authenticated/settings/account',
)()

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedProductsLazyRoute = AuthenticatedProductsLazyImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/products.lazy').then((d) => d.Route),
)

const AuthenticatedOrdersLazyRoute = AuthenticatedOrdersLazyImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/orders.lazy').then((d) => d.Route),
)

const AuthenticatedInventoryLazyRoute = AuthenticatedInventoryLazyImport.update(
  {
    id: '/inventory',
    path: '/inventory',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/inventory.lazy').then((d) => d.Route),
)

const AuthenticatedHelpCenterLazyRoute =
  AuthenticatedHelpCenterLazyImport.update({
    id: '/help-center',
    path: '/help-center',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/help-center.lazy').then((d) => d.Route),
  )

const AuthenticatedDiscountsLazyRoute = AuthenticatedDiscountsLazyImport.update(
  {
    id: '/discounts',
    path: '/discounts',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/discounts.lazy').then((d) => d.Route),
)

const AuthenticatedCustomersLazyRoute = AuthenticatedCustomersLazyImport.update(
  {
    id: '/customers',
    path: '/customers',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/customers.lazy').then((d) => d.Route),
)

const AuthenticatedAnalyticsLazyRoute = AuthenticatedAnalyticsLazyImport.update(
  {
    id: '/analytics',
    path: '/analytics',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/analytics.lazy').then((d) => d.Route),
)

const errors503LazyRoute = errors503LazyImport
  .update({
    id: '/(errors)/503',
    path: '/503',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/503.lazy').then((d) => d.Route))

const errors500LazyRoute = errors500LazyImport
  .update({
    id: '/(errors)/500',
    path: '/500',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/500.lazy').then((d) => d.Route))

const errors404LazyRoute = errors404LazyImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))

const errors403LazyRoute = errors403LazyImport
  .update({
    id: '/(errors)/403',
    path: '/403',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/403.lazy').then((d) => d.Route))

const errors401LazyRoute = errors401LazyImport
  .update({
    id: '/(errors)/401',
    path: '/401',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/401.lazy').then((d) => d.Route))

const AuthenticatedSettingsRouteLazyRoute =
  AuthenticatedSettingsRouteLazyImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/route.lazy').then((d) => d.Route),
  )

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const auth500Route = auth500Import.update({
  id: '/(auth)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedSettingsIndexLazyRoute =
  AuthenticatedSettingsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/index.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsNotificationsLazyRoute =
  AuthenticatedSettingsNotificationsLazyImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/notifications.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsDisplayLazyRoute =
  AuthenticatedSettingsDisplayLazyImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/display.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsAccountLazyRoute =
  AuthenticatedSettingsAccountLazyImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/account.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedDiscountsLaztRoute = AuthenticatedDiscountsLaztImport.update(
  {
    id: '/lazt',
    path: '/lazt',
    getParentRoute: () => AuthenticatedDiscountsLazyRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/500': {
      id: '/(auth)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof auth500Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503LazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/analytics': {
      id: '/_authenticated/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AuthenticatedAnalyticsLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/customers': {
      id: '/_authenticated/customers'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof AuthenticatedCustomersLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/discounts': {
      id: '/_authenticated/discounts'
      path: '/discounts'
      fullPath: '/discounts'
      preLoaderRoute: typeof AuthenticatedDiscountsLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/help-center': {
      id: '/_authenticated/help-center'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/inventory': {
      id: '/_authenticated/inventory'
      path: '/inventory'
      fullPath: '/inventory'
      preLoaderRoute: typeof AuthenticatedInventoryLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/orders': {
      id: '/_authenticated/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof AuthenticatedOrdersLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/products': {
      id: '/_authenticated/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof AuthenticatedProductsLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/discounts/lazt': {
      id: '/_authenticated/discounts/lazt'
      path: '/lazt'
      fullPath: '/discounts/lazt'
      preLoaderRoute: typeof AuthenticatedDiscountsLaztImport
      parentRoute: typeof AuthenticatedDiscountsLazyImport
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedSettingsRouteLazyRouteChildren {
  AuthenticatedSettingsAccountLazyRoute: typeof AuthenticatedSettingsAccountLazyRoute
  AuthenticatedSettingsDisplayLazyRoute: typeof AuthenticatedSettingsDisplayLazyRoute
  AuthenticatedSettingsNotificationsLazyRoute: typeof AuthenticatedSettingsNotificationsLazyRoute
  AuthenticatedSettingsIndexLazyRoute: typeof AuthenticatedSettingsIndexLazyRoute
}

const AuthenticatedSettingsRouteLazyRouteChildren: AuthenticatedSettingsRouteLazyRouteChildren =
  {
    AuthenticatedSettingsAccountLazyRoute:
      AuthenticatedSettingsAccountLazyRoute,
    AuthenticatedSettingsDisplayLazyRoute:
      AuthenticatedSettingsDisplayLazyRoute,
    AuthenticatedSettingsNotificationsLazyRoute:
      AuthenticatedSettingsNotificationsLazyRoute,
    AuthenticatedSettingsIndexLazyRoute: AuthenticatedSettingsIndexLazyRoute,
  }

const AuthenticatedSettingsRouteLazyRouteWithChildren =
  AuthenticatedSettingsRouteLazyRoute._addFileChildren(
    AuthenticatedSettingsRouteLazyRouteChildren,
  )

interface AuthenticatedDiscountsLazyRouteChildren {
  AuthenticatedDiscountsLaztRoute: typeof AuthenticatedDiscountsLaztRoute
}

const AuthenticatedDiscountsLazyRouteChildren: AuthenticatedDiscountsLazyRouteChildren =
  {
    AuthenticatedDiscountsLaztRoute: AuthenticatedDiscountsLaztRoute,
  }

const AuthenticatedDiscountsLazyRouteWithChildren =
  AuthenticatedDiscountsLazyRoute._addFileChildren(
    AuthenticatedDiscountsLazyRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteLazyRoute: typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  AuthenticatedAnalyticsLazyRoute: typeof AuthenticatedAnalyticsLazyRoute
  AuthenticatedCustomersLazyRoute: typeof AuthenticatedCustomersLazyRoute
  AuthenticatedDiscountsLazyRoute: typeof AuthenticatedDiscountsLazyRouteWithChildren
  AuthenticatedHelpCenterLazyRoute: typeof AuthenticatedHelpCenterLazyRoute
  AuthenticatedInventoryLazyRoute: typeof AuthenticatedInventoryLazyRoute
  AuthenticatedOrdersLazyRoute: typeof AuthenticatedOrdersLazyRoute
  AuthenticatedProductsLazyRoute: typeof AuthenticatedProductsLazyRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteLazyRoute:
    AuthenticatedSettingsRouteLazyRouteWithChildren,
  AuthenticatedAnalyticsLazyRoute: AuthenticatedAnalyticsLazyRoute,
  AuthenticatedCustomersLazyRoute: AuthenticatedCustomersLazyRoute,
  AuthenticatedDiscountsLazyRoute: AuthenticatedDiscountsLazyRouteWithChildren,
  AuthenticatedHelpCenterLazyRoute: AuthenticatedHelpCenterLazyRoute,
  AuthenticatedInventoryLazyRoute: AuthenticatedInventoryLazyRoute,
  AuthenticatedOrdersLazyRoute: AuthenticatedOrdersLazyRoute,
  AuthenticatedProductsLazyRoute: AuthenticatedProductsLazyRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/500': typeof errors500LazyRoute
  '/sign-in': typeof authSignInRoute
  '/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/analytics': typeof AuthenticatedAnalyticsLazyRoute
  '/customers': typeof AuthenticatedCustomersLazyRoute
  '/discounts': typeof AuthenticatedDiscountsLazyRouteWithChildren
  '/help-center': typeof AuthenticatedHelpCenterLazyRoute
  '/inventory': typeof AuthenticatedInventoryLazyRoute
  '/orders': typeof AuthenticatedOrdersLazyRoute
  '/products': typeof AuthenticatedProductsLazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/discounts/lazt': typeof AuthenticatedDiscountsLaztRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/settings/': typeof AuthenticatedSettingsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/500': typeof errors500LazyRoute
  '/sign-in': typeof authSignInRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/analytics': typeof AuthenticatedAnalyticsLazyRoute
  '/customers': typeof AuthenticatedCustomersLazyRoute
  '/discounts': typeof AuthenticatedDiscountsLazyRouteWithChildren
  '/help-center': typeof AuthenticatedHelpCenterLazyRoute
  '/inventory': typeof AuthenticatedInventoryLazyRoute
  '/orders': typeof AuthenticatedOrdersLazyRoute
  '/products': typeof AuthenticatedProductsLazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/discounts/lazt': typeof AuthenticatedDiscountsLaztRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/settings': typeof AuthenticatedSettingsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(auth)/500': typeof auth500Route
  '/(auth)/sign-in': typeof authSignInRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/(errors)/401': typeof errors401LazyRoute
  '/(errors)/403': typeof errors403LazyRoute
  '/(errors)/404': typeof errors404LazyRoute
  '/(errors)/500': typeof errors500LazyRoute
  '/(errors)/503': typeof errors503LazyRoute
  '/_authenticated/analytics': typeof AuthenticatedAnalyticsLazyRoute
  '/_authenticated/customers': typeof AuthenticatedCustomersLazyRoute
  '/_authenticated/discounts': typeof AuthenticatedDiscountsLazyRouteWithChildren
  '/_authenticated/help-center': typeof AuthenticatedHelpCenterLazyRoute
  '/_authenticated/inventory': typeof AuthenticatedInventoryLazyRoute
  '/_authenticated/orders': typeof AuthenticatedOrdersLazyRoute
  '/_authenticated/products': typeof AuthenticatedProductsLazyRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/discounts/lazt': typeof AuthenticatedDiscountsLaztRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/500'
    | '/sign-in'
    | '/settings'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/analytics'
    | '/customers'
    | '/discounts'
    | '/help-center'
    | '/inventory'
    | '/orders'
    | '/products'
    | '/'
    | '/discounts/lazt'
    | '/settings/account'
    | '/settings/display'
    | '/settings/notifications'
    | '/settings/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/500'
    | '/sign-in'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/analytics'
    | '/customers'
    | '/discounts'
    | '/help-center'
    | '/inventory'
    | '/orders'
    | '/products'
    | '/'
    | '/discounts/lazt'
    | '/settings/account'
    | '/settings/display'
    | '/settings/notifications'
    | '/settings'
  id:
    | '__root__'
    | '/_authenticated'
    | '/(auth)/500'
    | '/(auth)/sign-in'
    | '/_authenticated/settings'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/analytics'
    | '/_authenticated/customers'
    | '/_authenticated/discounts'
    | '/_authenticated/help-center'
    | '/_authenticated/inventory'
    | '/_authenticated/orders'
    | '/_authenticated/products'
    | '/_authenticated/'
    | '/_authenticated/discounts/lazt'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  auth500Route: typeof auth500Route
  authSignInRoute: typeof authSignInRoute
  errors401LazyRoute: typeof errors401LazyRoute
  errors403LazyRoute: typeof errors403LazyRoute
  errors404LazyRoute: typeof errors404LazyRoute
  errors500LazyRoute: typeof errors500LazyRoute
  errors503LazyRoute: typeof errors503LazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  auth500Route: auth500Route,
  authSignInRoute: authSignInRoute,
  errors401LazyRoute: errors401LazyRoute,
  errors403LazyRoute: errors403LazyRoute,
  errors404LazyRoute: errors404LazyRoute,
  errors500LazyRoute: errors500LazyRoute,
  errors503LazyRoute: errors503LazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/(auth)/500",
        "/(auth)/sign-in",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/settings",
        "/_authenticated/analytics",
        "/_authenticated/customers",
        "/_authenticated/discounts",
        "/_authenticated/help-center",
        "/_authenticated/inventory",
        "/_authenticated/orders",
        "/_authenticated/products",
        "/_authenticated/"
      ]
    },
    "/(auth)/500": {
      "filePath": "(auth)/500.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings/route.lazy.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/account",
        "/_authenticated/settings/display",
        "/_authenticated/settings/notifications",
        "/_authenticated/settings/"
      ]
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.lazy.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.lazy.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.lazy.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.lazy.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.lazy.tsx"
    },
    "/_authenticated/analytics": {
      "filePath": "_authenticated/analytics.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/customers": {
      "filePath": "_authenticated/customers.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/discounts": {
      "filePath": "_authenticated/discounts.lazy.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/discounts/lazt"
      ]
    },
    "/_authenticated/help-center": {
      "filePath": "_authenticated/help-center.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inventory": {
      "filePath": "_authenticated/inventory.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/orders": {
      "filePath": "_authenticated/orders.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/products": {
      "filePath": "_authenticated/products.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/discounts/lazt": {
      "filePath": "_authenticated/discounts.lazt.tsx",
      "parent": "/_authenticated/discounts"
    },
    "/_authenticated/settings/account": {
      "filePath": "_authenticated/settings/account.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/display": {
      "filePath": "_authenticated/settings/display.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/notifications": {
      "filePath": "_authenticated/settings/notifications.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.lazy.tsx",
      "parent": "/_authenticated/settings"
    }
  }
}
ROUTE_MANIFEST_END */
